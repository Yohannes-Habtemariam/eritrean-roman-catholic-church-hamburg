{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/myProjects/eritrean-roman-catholic-church-hamburg/frontend/src/views/registerPage/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { AiOutlineEye, AiOutlineEyeInvisible } from \"react-icons/ai\";\nimport { useNavigate } from 'react-router-dom';\nimport \"../../styles/registerPage/Register.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  // Navigate to login page\n  const navigate = useNavigate(); // State variables of the register form\n\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [telephone, setTelephone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [street, setStreet] = useState(\"\");\n  const [houseNumber, setHouseNumber] = useState(\"\");\n  const [zipCode, setZipCode] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [province, setProvince] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [agree, setAgree] = useState(false);\n  const [reset, setReset] = useState(false);\n  const [success, setSuccess] = useState(false); // State variables validation for the register form\n\n  const [firstNameValidation, setFirstNameValidation] = useState(false);\n  const [lastNameValidation, setLastNameValidation] = useState(false);\n  const [telephoneValidation, setTelephoneValidation] = useState(false);\n  const [emailValidation, setEmailValidation] = useState(false);\n  const [passwordValidation, setPasswordValidation] = useState(false);\n  const [confirmPasswordValidation, setConfirmPasswordValidation] = useState(false);\n  const [streetValidation, setStreetValidation] = useState(false);\n  const [houseNumberValidation, setHouseNumberValidation] = useState(false);\n  const [zipCodeValidation, setZipCodeValidation] = useState(false);\n  const [cityValidation, setCityValidation] = useState(false);\n  const [provinceValidation, setProvinceValidation] = useState(false);\n  const [countryValidation, setCountryValidation] = useState(false);\n  const [agreeValidation, setAgreeValidation] = useState(false); // Function to update the \"register\" state variables\n\n  const updateData = event => {\n    switch (event.target.name) {\n      case \"firstName\":\n        setFirstName(event.target.value);\n        setFirstNameValidation(true);\n        break;\n\n      case \"lastName\":\n        setLastName(event.target.value);\n        setLastNameValidation(true);\n        break;\n\n      case \"gender\":\n        setGender(event.target.value);\n        break;\n\n      case \"birthday\":\n        setTelephone(event.target.value);\n        setTelephoneValidation(true);\n        break;\n\n      case \"email\":\n        setEmail(event.target.value);\n        setEmailValidation(true);\n        break;\n\n      case \"password\":\n        setPassword(event.target.value);\n        setPasswordValidation(true);\n        break;\n\n      case \"chowPassword\":\n        showPassword(false);\n        break;\n\n      case \"confirmPassword\":\n        setConfirmPassword(event.target.value);\n        setConfirmPasswordValidation(true);\n        break;\n\n      case \"chowConfirmPassword\":\n        setShowConfirmPassword(false);\n        break;\n\n      case \"error\":\n        setError(event.target.value);\n        break;\n\n      case \"street\":\n        setStreet(event.target.value);\n        setStreetValidation(true);\n        break;\n\n      case \"houseNumber\":\n        setHouseNumber(event.target.value);\n        setHouseNumberValidation(true);\n        break;\n\n      case \"zipCode\":\n        setZipCode(event.target.value);\n        setZipCodeValidation(true);\n        break;\n\n      case \"city\":\n        setCity(event.target.value);\n        setCityValidation(true);\n        break;\n\n      case \"province\":\n        setProvince(event.target.value);\n        setProvinceValidation(true);\n        break;\n\n      case \"country\":\n        setCountry(event.target.value);\n        setCountryValidation(true);\n        break;\n\n      case \"agree\":\n        setAgree(false);\n        setAgreeValidation(true);\n        break;\n\n      case \"reset\":\n        setReset(false);\n        break;\n\n      case \"success\":\n        setSuccess(false);\n        break;\n\n      default:\n        break;\n    }\n\n    ;\n  }; // Function to show/hide password\n\n\n  const PasswordVisibility = () => {\n    setShowPassword(prevState => !prevState);\n  }; // Function to show/hide  confirm password \n\n\n  const confirmPasswordVisibility = () => {\n    setShowConfirmPassword(prevState => !prevState);\n  }; // Function to check if the passwords match\n\n\n  const checkPassword = () => {\n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match\");\n    } else {\n      setError(\"\");\n    }\n  }; // Function to check if the password is valid\n\n\n  const checkPasswordLength = () => {\n    if (password.length < 8) {\n      setError(\"Password must be at least 8 characters long\");\n    } else {\n      setError(\"\");\n    }\n  }; // Function to check the terms and conditions checkbox is checked\n\n\n  const checkTermsAndConditionsCheckbox = () => {\n    if (agree === false) {\n      setError(\"You must agree to the terms and conditions\");\n    } else {\n      setError(\"\");\n    }\n  }; // Make a useRef to the error element\n\n\n  const firstNameError = useRef();\n  const lastNameError = useRef();\n  const telephoneError = useRef();\n  const emailError = useRef();\n  const agreeError = useRef();\n  const passwordError = useRef();\n  const confirmPasswordError = useRef();\n  const streetError = useRef();\n  const houseNumberError = useRef();\n  const zipCodeError = useRef();\n  const cityError = useRef();\n  const provinceError = useRef();\n  const countryError = useRef();\n  const ageError = useRef(); // Function to check if the email is valid\n\n  const checkEmailFormat = () => {\n    const emailRegex = /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/.test(email);\n\n    if (emailRegex) {\n      emailError.current.className = \"errorInvisible\"; //emailFormatError.current.style.display = \"none\"\n    } else {\n      emailError.current.className = \"errorVisible\"; //emailFormatError.current.style.display = \"block\"\n    }\n  };\n\n  const checkPasswordFormat = () => {\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/.test(password);\n\n    if (passwordRegex && password.length >= 12) {\n      passwordError.current.className = \"errorInvisible\"; //passwordRef.current.style.display = \"none\"\n    } else {\n      passwordError.current.className = \"errorVisible\"; //passwordRef.current.style.display = \"block\"\n    }\n  }; // Function to check the terms and conditions checkbox is checked\n\n\n  const checkboxAgree = prevAgree => {\n    setAgreeValidation(prevAgree => !prevAgree);\n  }; // Function to check if the telephone is valid\n\n\n  const checkTelephoneFormat = () => {\n    const telephoneRegex = /^[0-9]{3}-[0-9]{3}-[0-9]{4}$/.test(telephone);\n\n    if (telephoneRegex) {\n      telephoneError.current.className = \"errorInvisible\"; //telephoneFormatError.current.style.display = \"none\"\n    } else {\n      telephoneError.current.className = \"errorVisible\"; //telephoneFormatError.current.style.display = \"block\"\n    }\n  }; // Function to reset all the state variables\n\n\n  const resetEnteredData = () => {\n    setFirstName(\"\");\n    setFirstNameValidation(false);\n    setLastName(\"\");\n    setLastNameValidation(false);\n    setEmail(\"\");\n    setEmailValidation(false);\n    setPassword(\"\");\n    setPasswordValidation(false);\n    setConfirmPassword(\"\");\n    setConfirmPasswordValidation(false);\n    setStreet(\"\");\n    setStreetValidation(false);\n    setHouseNumber(\"\");\n    setHouseNumberValidation(false);\n    setZipCode(\"\");\n    setZipCodeValidation(false);\n    setCity(\"\");\n    setCityValidation(false);\n    setProvince(\"\");\n    setProvinceValidation(false);\n    setCountry(\"\");\n    setCountryValidation(false);\n    setAgree(false);\n    setAgreeValidation(false);\n    setTelephone(\"\");\n    setTelephoneValidation(false);\n    setError(\"\");\n    setShowPassword(false);\n    setShowConfirmPassword(false);\n    setReset(false);\n    setSuccess(false);\n  }; // Function to register the user\n\n\n  const SubmitRegisteredUser = async event => {\n    event.preventDefault();\n    const userData = {\n      firstName: firstName,\n      lastName: lastName,\n      gender: gender,\n      telephone: telephone,\n      email: email,\n      password: password,\n      confirmPassword: confirmPassword,\n      street: street,\n      houseNumber: houseNumber,\n      zipCode: zipCode,\n      city: city,\n      province: province,\n      country: country\n    };\n    const settings = {\n      method: \"POST\",\n      body: JSON.stringify(userData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const response = await fetch(\"https://jsonplaceholder.typicode.com/users\", settings);\n    const data = await response.json();\n\n    try {\n      if (response.ok) {\n        console.log(data); // Navigate to login page\n\n        navigate(\"/login\"); // reset the state variables\n\n        resetEnteredData();\n      } else {\n        throw new Error(data.error);\n      }\n    } catch (err) {\n      //setError(err.message)\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"register-form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: \"register-form-fieldset\",\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        className: \"register-legend\",\n        children: \" Create an Account \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"registration-form\",\n        onSubmit: SubmitRegisteredUser,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"full-name-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"firstName-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"firstName-label\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"firstName\",\n                children: \" First Name \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 49\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"firstName-input\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"firstName\",\n                name: \"firstName\",\n                onChange: updateData,\n                value: firstName,\n                placeholder: \"Enter First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 49\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: firstName.trim().length === 0 && firstNameValidation ? \"errorVisible\" : \"errorInvisible\",\n              ref: firstNameError,\n              children: \" First name is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lastName-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"lastName-label\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"lastName\",\n                children: \" Last Name \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 48\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"lastName-input\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"lastName\",\n                name: \"lastName\",\n                onChange: updateData,\n                value: lastName,\n                placeholder: \"Enter Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 48\n              }, this), \"  \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: lastName.trim().length === 0 && lastNameValidation ? \"errorVisible\" : \"errorInvisible\",\n              ref: lastNameError,\n              children: \" Last name is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"telephone-gender-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"telephone-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"telephone-label\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"telephone\",\n                children: \" Telephone \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 49\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"telephone-input\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"tel\",\n                id: \"telephone\",\n                name: \"telephone\",\n                onChange: updateData,\n                value: telephone,\n                placeholder: \"Enter Telephone Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 49\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: telephone.trim().length === 0 && telephoneValidation ? \"errorVisible\" : \"errorInvisible\",\n              ref: telephoneError,\n              children: \" Telephone is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"errorInvisible\",\n              ref: checkTelephoneFormat,\n              children: \" Incorrect telephone format! \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gender-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"gender-label\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"gender\",\n                children: \"Gender \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 46\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"gender-input\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"gender\",\n                name: \"gender\",\n                onChange: updateData,\n                value: gender,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"default\",\n                  children: \" Select Gender\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"female\",\n                  children: \"Female\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"male\",\n                  children: \"Male\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"other\",\n                  children: \"Other\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"email-address-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"email-label\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \" Email Address \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 43\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"email-input\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              name: \"email\",\n              onBlur: checkEmailFormat,\n              onChange: updateData,\n              value: email,\n              placeholder: \"Enter Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 43\n            }, this), \"  \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: email.trim().length === 0 && emailValidation ? \"errorVisible\" : \"errorInvisible\",\n            ref: emailError,\n            children: \" Email is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"errorInvisible\",\n            ref: checkEmailFormat,\n            children: \" Incorrect email format! \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password-confirm-password-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"password-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"password-label\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                children: \" Password \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 48\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"password-input\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: showPassword ? \"text\" : \"password\",\n                id: \"password\",\n                name: \"password\",\n                onBlur: checkPasswordFormat,\n                onChange: updateData,\n                value: password,\n                placeholder: \"Enter Password\",\n                className: \"icons\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: PasswordVisibility,\n                className: \"password-display\",\n                children: [\" \", showPassword ? /*#__PURE__*/_jsxDEV(AiOutlineEyeInvisible, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 98\n                }, this) : /*#__PURE__*/_jsxDEV(AiOutlineEye, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 125\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: password.trim().length === 0 && passwordValidation ? \"errorVisible\" : \"errorInvisible\",\n                ref: passwordError,\n                children: \" Password is required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"errorInvisible\",\n                ref: passwordError,\n                children: \"Password must be at least 12 characters long and contain at least one uppercase letter, one lowercase letter, one number and one special character\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"confirm-password-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"confirm-password-label\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"confirmPassword\",\n                children: \" Confirm Password \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 56\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"confirm-password-input\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: showConfirmPassword ? \"text\" : \"password\",\n                id: \"confirmPassword\",\n                name: \"confirmPassword\",\n                onChange: updateData,\n                value: confirmPassword,\n                placeholder: \"Confirm Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: confirmPasswordVisibility,\n                className: \"password-display\",\n                children: [\" \", showConfirmPassword ? /*#__PURE__*/_jsxDEV(AiOutlineEyeInvisible, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 112\n                }, this) : /*#__PURE__*/_jsxDEV(AiOutlineEye, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 139\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: confirmPassword.trim().length === 0 && confirmPasswordValidation ? \"errorVisible\" : \"errorInvisible\",\n                ref: confirmPasswordError,\n                children: \" Confirm password is required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"residence-address-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"label\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"street\",\n              children: \" Residence Address \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 37\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"residence-address-inputs-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"street-input\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"street\",\n                name: \"street\",\n                onChange: updateData,\n                value: street,\n                placeholder: \"Enter Street Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: street.trim().length === 0 && streetValidation ? \"errorVisible\" : \"errorInvisible\",\n                ref: streetError,\n                children: \" Street name is required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"house-number\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: \"houseNumber\",\n                onChange: updateData,\n                value: houseNumber,\n                placeholder: \"Enter House Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: houseNumber.trim().length === 0 && houseNumberValidation ? \"errorVisible\" : \"errorInvisible\",\n                ref: houseNumberError,\n                children: \" House number is required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"zipCode\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: \"zipCode\",\n                onChange: updateData,\n                value: zipCode,\n                placeholder: \"Enter Zip Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: zipCode.trim().length === 0 && zipCodeValidation ? \"errorVisible\" : \"errorInvisible\",\n                ref: zipCodeError,\n                children: \" Zip code is required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"city\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"city\",\n                onChange: updateData,\n                value: city,\n                placeholder: \"Enter City\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: city.trim().length === 0 && cityValidation ? \"errorVisible\" : \"errorInvisible\",\n                ref: cityError,\n                children: \" City is required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"province\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"province\",\n                onChange: updateData,\n                value: province,\n                placeholder: \"Enter Province\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: province.trim().length === 0 && provinceValidation ? \"errorVisible\" : \"errorInvisible\",\n                ref: provinceError,\n                children: \" Province is required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"country\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"country\",\n                onChange: updateData,\n                value: country,\n                placeholder: \"Enter Country\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: country.trim().length === 0 && countryValidation ? \"errorVisible\" : \"errorInvisible\",\n                ref: countryError,\n                children: \" Country is required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkbox-reset-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkbox-container\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: \"agree\",\n              name: \"agree\",\n              checked: checkboxAgree.agree\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 50\n            }, this), \"  \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"agree-statement\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"agree\",\n              children: [\" I agree with the defined \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"terms\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 96\n              }, this), \" and \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"conditions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 119\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 47\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reset-container\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"reset\",\n              onClick: resetEnteredData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 47\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: agree === false && agreeValidation ? \"errorVisible\" : \"errorInvisible\",\n            ref: agreeError,\n            children: \"Confirm your agreement\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"registration-buttons-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"register-button\",\n            onClick: SubmitRegisteredUser,\n            children: \" Register \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 19\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"swap-to-login\",\n          children: [\"if already registered? \", /*#__PURE__*/_jsxDEV(NavLink, {\n            to: \"/login\",\n            className: \"login-button\",\n            children: \" Login \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 308,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"wpJxitRoFNVIgvpdXsQsTnuCUzo=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/user/Desktop/myProjects/eritrean-roman-catholic-church-hamburg/frontend/src/views/registerPage/Register.js"],"names":["React","useState","useRef","NavLink","AiOutlineEye","AiOutlineEyeInvisible","useNavigate","Register","navigate","firstName","setFirstName","lastName","setLastName","gender","setGender","telephone","setTelephone","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","error","setError","street","setStreet","houseNumber","setHouseNumber","zipCode","setZipCode","city","setCity","province","setProvince","country","setCountry","agree","setAgree","reset","setReset","success","setSuccess","firstNameValidation","setFirstNameValidation","lastNameValidation","setLastNameValidation","telephoneValidation","setTelephoneValidation","emailValidation","setEmailValidation","passwordValidation","setPasswordValidation","confirmPasswordValidation","setConfirmPasswordValidation","streetValidation","setStreetValidation","houseNumberValidation","setHouseNumberValidation","zipCodeValidation","setZipCodeValidation","cityValidation","setCityValidation","provinceValidation","setProvinceValidation","countryValidation","setCountryValidation","agreeValidation","setAgreeValidation","updateData","event","target","name","value","PasswordVisibility","prevState","confirmPasswordVisibility","checkPassword","checkPasswordLength","length","checkTermsAndConditionsCheckbox","firstNameError","lastNameError","telephoneError","emailError","agreeError","passwordError","confirmPasswordError","streetError","houseNumberError","zipCodeError","cityError","provinceError","countryError","ageError","checkEmailFormat","emailRegex","test","current","className","checkPasswordFormat","passwordRegex","checkboxAgree","prevAgree","checkTelephoneFormat","telephoneRegex","resetEnteredData","SubmitRegisteredUser","preventDefault","userData","settings","method","body","JSON","stringify","headers","response","fetch","data","json","ok","console","log","Error","err","trim"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport {AiOutlineEye, AiOutlineEyeInvisible} from \"react-icons/ai\";\nimport { useNavigate } from 'react-router-dom';\nimport \"../../styles/registerPage/Register.css\";\n\nconst Register = () => {\n  // Navigate to login page\n  const navigate = useNavigate();\n // State variables of the register form\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [telephone, setTelephone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [street, setStreet] = useState(\"\");\n  const [houseNumber, setHouseNumber] = useState(\"\");\n  const [zipCode, setZipCode] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [province, setProvince] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [agree, setAgree] = useState(false);\n  const [reset, setReset] = useState(false);\n  const [success, setSuccess] = useState(false);\n\n  // State variables validation for the register form\n  const [firstNameValidation, setFirstNameValidation] = useState(false);\n  const [lastNameValidation, setLastNameValidation] = useState(false);\n  const [telephoneValidation, setTelephoneValidation] = useState(false);\n  const [emailValidation, setEmailValidation] = useState(false);\n  const [passwordValidation, setPasswordValidation] = useState(false);\n  const [confirmPasswordValidation, setConfirmPasswordValidation] = useState(false);\n  const [streetValidation, setStreetValidation] = useState(false);\n  const [houseNumberValidation, setHouseNumberValidation] = useState(false);\n  const [zipCodeValidation, setZipCodeValidation] = useState(false);\n  const [cityValidation, setCityValidation] = useState(false);\n  const [provinceValidation, setProvinceValidation] = useState(false);\n  const [countryValidation, setCountryValidation] = useState(false);\n  const [agreeValidation, setAgreeValidation] = useState(false);\n\n\n  // Function to update the \"register\" state variables\n  const updateData = (event) => {\n    switch (event.target.name) {\n      case \"firstName\":\n        setFirstName(event.target.value);\n        setFirstNameValidation(true);\n        break;\n      case \"lastName\":\n        setLastName(event.target.value);\n        setLastNameValidation(true);\n        break;\n      case \"gender\":\n        setGender(event.target.value);\n        break;\n      case \"birthday\":\n        setTelephone(event.target.value);\n        setTelephoneValidation(true);\n        break;\n      case \"email\":\n        setEmail(event.target.value);\n        setEmailValidation(true);\n        break;\n      case \"password\":\n        setPassword(event.target.value);\n        setPasswordValidation(true);\n        break;\n      case \"chowPassword\":\n        showPassword(false);\n        break;\n      case \"confirmPassword\":\n        setConfirmPassword(event.target.value);\n        setConfirmPasswordValidation(true);\n        break;\n      case \"chowConfirmPassword\":\n        setShowConfirmPassword(false);\n        break;\n      case \"error\":\n        setError(event.target.value);\n        break;\n      case \"street\":\n        setStreet(event.target.value);\n        setStreetValidation(true);\n        break;\n      case \"houseNumber\":\n        setHouseNumber(event.target.value);\n        setHouseNumberValidation(true);\n        break;\n      case \"zipCode\":\n        setZipCode(event.target.value);\n        setZipCodeValidation(true);\n        break;\n      case \"city\":\n        setCity(event.target.value);\n        setCityValidation(true);\n        break;\n      case \"province\":\n        setProvince(event.target.value);\n        setProvinceValidation(true);\n        break;\n      case \"country\":\n        setCountry(event.target.value);\n        setCountryValidation(true);\n        break;\n      case \"agree\":\n        setAgree(false);\n        setAgreeValidation(true);\n        break;\n      case \"reset\":\n        setReset(false);\n        break;\n      case \"success\":\n        setSuccess(false);\n        break;\n      default:\n        break;\n    };\n  };\n\n  // Function to show/hide password\n const PasswordVisibility = () => {\n  setShowPassword(prevState => !prevState);\n }\n\n  // Function to show/hide  confirm password \n  const confirmPasswordVisibility = () => {\n    setShowConfirmPassword(prevState => !prevState);\n  }\n\n  // Function to check if the passwords match\n  const checkPassword = () => {\n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match\");\n    } else {\n      setError(\"\");\n    }\n  };\n\n  // Function to check if the password is valid\n  const checkPasswordLength = () => {\n    if (password.length < 8) {\n      setError(\"Password must be at least 8 characters long\");\n    } else {\n      setError(\"\");\n    }\n  };\n\n  // Function to check the terms and conditions checkbox is checked\n  const checkTermsAndConditionsCheckbox = () => {\n    if (agree === false) {\n      setError(\"You must agree to the terms and conditions\");\n    } else {\n      setError(\"\");\n    }\n  };\n\n\n  // Make a useRef to the error element\n  const firstNameError = useRef();\n  const lastNameError = useRef();\n  const telephoneError = useRef();\n  const emailError = useRef();\n  const agreeError = useRef();\n  const passwordError = useRef();\n  const confirmPasswordError = useRef();\n  const streetError = useRef();\n  const houseNumberError = useRef();\n  const zipCodeError = useRef();\n  const cityError = useRef();\n  const provinceError = useRef();\n  const countryError = useRef();\n  const ageError = useRef();\n\n\n\n  // Function to check if the email is valid\n  const checkEmailFormat = () => {\n    const emailRegex = /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/.test(email);\n    if (emailRegex) {\n        emailError.current.className = \"errorInvisible\"\n          //emailFormatError.current.style.display = \"none\"\n    } else {\n          emailError.current.className = \"errorVisible\"\n          //emailFormatError.current.style.display = \"block\"\n    }\n  };\n\n  const checkPasswordFormat = () => {\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/.test(password);\n    if (passwordRegex && password.length >= 12) {\n        passwordError.current.className = \"errorInvisible\"\n          //passwordRef.current.style.display = \"none\"\n    } else {\n          passwordError.current.className = \"errorVisible\"\n          //passwordRef.current.style.display = \"block\"\n    }\n  }\n\n  // Function to check the terms and conditions checkbox is checked\n  const checkboxAgree = (prevAgree) => {\n    setAgreeValidation(prevAgree => !prevAgree)\n  }\n\n  // Function to check if the telephone is valid\n  const checkTelephoneFormat = () => {\n    const telephoneRegex = /^[0-9]{3}-[0-9]{3}-[0-9]{4}$/.test(telephone);\n    if (telephoneRegex) {\n        telephoneError.current.className = \"errorInvisible\"\n          //telephoneFormatError.current.style.display = \"none\"\n    } else {\n          telephoneError.current.className = \"errorVisible\"\n          //telephoneFormatError.current.style.display = \"block\"\n    }\n  };\n\n  // Function to reset all the state variables\n  const resetEnteredData = () => {\n    setFirstName(\"\");\n    setFirstNameValidation(false);\n    setLastName(\"\");\n    setLastNameValidation(false);\n    setEmail(\"\");\n    setEmailValidation(false);\n    setPassword(\"\");\n    setPasswordValidation(false);\n    setConfirmPassword(\"\");\n    setConfirmPasswordValidation(false);\n    setStreet(\"\");\n    setStreetValidation(false);\n    setHouseNumber(\"\");\n    setHouseNumberValidation(false);\n    setZipCode(\"\");\n    setZipCodeValidation(false);\n    setCity(\"\");\n    setCityValidation(false);\n    setProvince(\"\");\n    setProvinceValidation(false);\n    setCountry(\"\");\n    setCountryValidation(false);\n    setAgree(false);\n    setAgreeValidation(false);\n    setTelephone(\"\");\n    setTelephoneValidation(false);\n    setError(\"\");\n    setShowPassword(false);\n    setShowConfirmPassword(false);\n    setReset(false);\n    setSuccess(false);\n  }\n\n // Function to register the user\n  const SubmitRegisteredUser = async (event) => {\n    event.preventDefault();\n    \n    const userData = {\n      firstName: firstName,\n      lastName: lastName,\n      gender: gender,\n      telephone: telephone,\n      email: email,\n      password: password,\n      confirmPassword: confirmPassword,\n      street: street,\n      houseNumber: houseNumber,\n      zipCode: zipCode,\n      city: city,\n      province: province,\n      country: country,\n    };\n\n    const settings = {\n      method: \"POST\",\n      body: JSON.stringify(userData),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      }\n    };\n\n    const response = await fetch(\"https://jsonplaceholder.typicode.com/users\", settings);\n    const data = await response.json();\n\n    try{\n      if(response.ok) {\n        console.log(data);\n\n        // Navigate to login page\n        navigate(\"/login\");\n\n        // reset the state variables\n        resetEnteredData();\n       \n      } else {\n        throw new Error(data.error);\n      }\n    }catch (err){\n      //setError(err.message)\n      console.log(err)\n    }\n  \n  }\n\n  return (\n    <section className=\"register-form-container\">\n      <fieldset className=\"register-form-fieldset\">\n        <legend className='register-legend'> Create an Account </legend>\n        <form className=\"registration-form\" onSubmit={SubmitRegisteredUser} >\n\n        {/* Full name container*/}\n          <div className=\"full-name-container\">\n            <div className='firstName-container'>\n              <div className=\"firstName-label\"> <label htmlFor=\"firstName\"> First Name </label> </div>\n              <div className=\"firstName-input\"> <input type=\"text\" id=\"firstName\" name=\"firstName\" onChange={updateData} value={firstName} placeholder=\"Enter First Name\" /> </div>\n              <div className={firstName.trim().length === 0 && firstNameValidation ? \"errorVisible\" : \"errorInvisible\"} ref={firstNameError}> First name is required</div>\n            </div>\n\n            <div className='lastName-container'>\n              <div className=\"lastName-label\"> <label htmlFor=\"lastName\"> Last Name </label> </div>\n              <div className=\"lastName-input\"> <input type=\"text\" id=\"lastName\" name=\"lastName\" onChange={updateData} value={lastName}  placeholder=\"Enter Last Name\" />  </div>\n              <div className={lastName.trim().length === 0 && lastNameValidation ? \"errorVisible\" : \"errorInvisible\"} ref={lastNameError}> Last name is required</div>\n            </div>\n          </div>\n\n\n          {/* Date of birth container*/}\n          <div className=\"telephone-gender-container\">\n           <div className='telephone-container'>\n              <div className=\"telephone-label\"> <label htmlFor=\"telephone\"> Telephone </label> </div>\n              <div className=\"telephone-input\"> <input type=\"tel\" id='telephone' name=\"telephone\" onChange={updateData} value={telephone} placeholder=\"Enter Telephone Number\" /> </div>\n              <div className={telephone.trim().length === 0 && telephoneValidation ? \"errorVisible\" : \"errorInvisible\"} ref={telephoneError}> Telephone is required</div>\n              <div className=\"errorInvisible\" ref={checkTelephoneFormat}> Incorrect telephone format! </div>\n           </div>\n            \n            <div className='gender-container'>\n              <div className=\"gender-label\"> <label htmlFor=\"gender\">Gender </label> </div>\n              <div className=\"gender-input\"> \n                <select id=\"gender\" name=\"gender\" onChange={updateData} value={gender}>\n                  <option value=\"default\"> Select Gender</option>\n                  <option value=\"female\">Female</option>\n                  <option value=\"male\">Male</option>\n                  <option value=\"other\">Other</option>\n                </select> \n              </div>\n            </div>\n          </div>\n\n\n          {/* Email container*/}\n          <div className=\"email-address-container\">\n            <div className=\"email-label\"> <label htmlFor=\"email\"> Email Address </label> </div>\n            <div className=\"email-input\"> <input type=\"email\" id=\"email\" name=\"email\" onBlur={checkEmailFormat} onChange={updateData} value={email} placeholder=\"Enter Email\" />  </div>\n            <div className={email.trim().length === 0 && emailValidation ? \"errorVisible\" : \"errorInvisible\"} ref={emailError}> Email is required</div>\n            <div className=\"errorInvisible\" ref={checkEmailFormat}> Incorrect email format! </div>\n          </div>\n\n\n          {/* Password container*/}\n          <div className=\"password-confirm-password-container\">\n            <div className='password-container'>\n              <div className=\"password-label\"> <label htmlFor=\"password\"> Password </label> </div>\n              <div className=\"password-input\"> \n                <input type={showPassword ? \"text\" : \"password\"} id=\"password\" name=\"password\" onBlur={checkPasswordFormat} onChange={updateData} value={password} placeholder=\"Enter Password\" className=\"icons\"/> \n                \n                <span onClick={PasswordVisibility} className=\"password-display\"> {showPassword ? <AiOutlineEyeInvisible/> : <AiOutlineEye/>} </span>\n\n                <div className={password.trim().length === 0 && passwordValidation ? \"errorVisible\" : \"errorInvisible\"} ref={passwordError}> Password is required</div>\n\n                <div className='errorInvisible' ref={passwordError} >Password must be at least 12 characters long and contain at least one uppercase letter, one lowercase letter, one number and one special character</div>\n              </div>\n            </div>\n\n            <div className=\"confirm-password-container\"> \n              <div className=\"confirm-password-label\"> <label htmlFor=\"confirmPassword\"> Confirm Password </label> </div>\n              <div className='confirm-password-input'>\n                <input type={showConfirmPassword ? \"text\" : \"password\"} id=\"confirmPassword\" name=\"confirmPassword\" onChange={updateData} value={confirmPassword} placeholder=\"Confirm Password\" /> \n                <span onClick={confirmPasswordVisibility} className=\"password-display\"> {showConfirmPassword ? <AiOutlineEyeInvisible/> : <AiOutlineEye/>} </span>\n\n                <div className={confirmPassword.trim().length === 0 && confirmPasswordValidation ? \"errorVisible\" : \"errorInvisible\"} ref={confirmPasswordError}> Confirm password is required</div>\n              </div>\n            </div>\n          </div>\n\n           {/* residence address container*/}\n          <div className=\"residence-address-container\">\n            <div className=\"label\"> <label htmlFor=\"street\"> Residence Address </label> </div>\n           <div className='residence-address-inputs-container'>\n              <div className=\"street-input\"> \n                <input type=\"text\" id=\"street\" name=\"street\" onChange={updateData} value={street} placeholder=\"Enter Street Name\" /> \n                <div className={street.trim().length === 0 && streetValidation ? \"errorVisible\" : \"errorInvisible\"} ref={streetError}> Street name is required</div>\n              </div>\n\n              <div className=\"house-number\"> \n                <input type=\"number\" name=\"houseNumber\" onChange={updateData} value={houseNumber} placeholder=\"Enter House Number\" /> \n                <div className={houseNumber.trim().length === 0 && houseNumberValidation ? \"errorVisible\" : \"errorInvisible\"} ref={houseNumberError}> House number is required</div>\n              </div>\n\n              <div className=\"zipCode\"> \n                <input type=\"number\" name=\"zipCode\" onChange={updateData} value={zipCode} placeholder=\"Enter Zip Code\" /> \n                <div className={zipCode.trim().length === 0 && zipCodeValidation ? \"errorVisible\" : \"errorInvisible\"} ref={zipCodeError}> Zip code is required</div>\n              </div>\n\n              <div className=\"city\">  \n                <input type=\"text\"  name=\"city\" onChange={updateData} value={city} placeholder=\"Enter City\" /> \n                <div className={city.trim().length === 0 && cityValidation ? \"errorVisible\" : \"errorInvisible\"} ref={cityError}> City is required</div>\n              </div>\n\n              <div className=\"province\"> \n                <input type=\"text\" name=\"province\" onChange={updateData} value={province} placeholder=\"Enter Province\" /> \n                <div className={province.trim().length === 0 && provinceValidation ? \"errorVisible\" : \"errorInvisible\"} ref={provinceError}> Province is required</div>\n              </div>\n\n              <div className=\"country\"> \n                <input type=\"text\" name=\"country\" onChange={updateData} value={country} placeholder=\"Enter Country\" /> \n                <div className={country.trim().length === 0 && countryValidation ? \"errorVisible\" : \"errorInvisible\"} ref={countryError}> Country is required</div>\n              </div>\n           </div>\n          </div>\n\n          {/* Consent checkbox container*/}\n          <div className=\"checkbox-reset-container\">\n\n            <div className=\"checkbox-container\"> <input type=\"checkbox\" id='agree' name=\"agree\" checked={checkboxAgree.agree} />  </div>\n\n            <div className=\"agree-statement\"> <label htmlFor=\"agree\"> I agree with the defined <span>terms</span> and <span>conditions</span></label> </div>\n\n            <div className='reset-container'> <input type=\"reset\" onClick={resetEnteredData} /> </div>\n\n            {/* Validation of consent checkbox */}\n            <div className={agree === false && agreeValidation ? \"errorVisible\" : \"errorInvisible\"} ref={agreeError} >Confirm your agreement</div>\n          </div>\n          \n        </form>\n\n        {/* submit button and login button*/}\n\n        <div className='registration-buttons-container'>\n\n            <div> <button className=\"register-button\" onClick={SubmitRegisteredUser} > Register </button> </div>\n\n            <div className='swap-to-login'> \n              if already registered? <NavLink to=\"/login\" className='login-button'> Login </NavLink> \n            </div>\n        </div>\n         \n      </fieldset>\n    </section>\n  )\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}